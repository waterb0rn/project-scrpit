movement.cs

using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UIElements;
using static UnityEditor.Experimental.GraphView.GraphView;

public class movement : MonoBehaviour
{
    private float Move;
    [SerializeField] private float Jump;
    [SerializeField] private float Speed;
    [SerializeField] private float ShiftSpeed;
    private bool isGrounded;
    private bool isSprinting;

    [SerializeField] public Sprite spriteColor;
    [SerializeField] private Sprite spriteColor1;
    [SerializeField] private Sprite spriteColor2;
    
    public Transform player;
    public Transform respawnPoint;
    public Transform deadPoint;
    


    private Rigidbody2D rb;
    private SpriteRenderer sr;

    // Start is called before the first frame update
    void Start()
    {
        rb = GetComponent<Rigidbody2D>();
        isGrounded = true;
        sr = GetComponent<SpriteRenderer>();
    }

    // Update is called once per frame
    void Update()
    {
        Move = Input.GetAxis("Horizontal");

        rb.velocity = new Vector2(Move * Speed, rb.velocity.y);

        if (Input.GetKeyDown(KeyCode.Space) && isGrounded == true)
        {
            rb.velocity = new Vector2(rb.velocity.x, Jump);
            isGrounded = false;
        }

        if(Input.GetKey(KeyCode.LeftShift))
        {
            isSprinting = true;
            rb.velocity = new Vector2 (rb.velocity.x * ShiftSpeed, rb.velocity.y);
        }
        else
        {
            isSprinting = false;

        }
        
        if(isSprinting == true)
        {
            spriteColor = spriteColor2;
        }
        else
        { 
            spriteColor = spriteColor1;
        }

        sr.sprite = spriteColor;

        

    }

    void OnCollisionEnter2D()
    {
        isGrounded = true;
    }
    private void OnTriggerEnter2D()
    {
        player.position = deadPoint.position;
        Invoke("RespawnPlayer", 1f);
    }

    public void RespawnPlayer()
    {
        
        player.position = respawnPoint.position;
    }

}



LaserScript.cs

using System.Collections;
using System.Collections.Generic;
using System.Threading;
using UnityEngine;

public class LaserScript : MonoBehaviour
{
    [SerializeField] private float countdown;
        
    
    // Start is called before the first frame update
    void Start()
    {
        
    }

    // Update is called once per frame
    void Update()
    {
        if(countdown <= 0)
        {
            gameObject.SetActive(false);
        }
        else
        {
            countdown -= Time.deltaTime;
        }

    }
}




LaserSpawner.cs

using System;
using System.Collections;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using Unity.Mathematics;
using UnityEngine;

public class LaserSpawner : MonoBehaviour
{
    public GameObject laser;
    
    public float spawnRate = 3;
    private float timer = 0;

    [SerializeField] private float leftRight;
    private float furthestLeft;
    private float furthestRight;

    // Start is called before the first frame update
    void Start()
    {
        leftRight = 5;

        furthestRight += leftRight;
        furthestLeft -= leftRight;
    }

    // Update is called once per frame
    void Update()
    {
        if (timer < spawnRate)
        {
            timer = timer + Time.deltaTime;
        }
        else
        {
            spawnLaser();
            timer = 0;
        }

    }

    void spawnLaser()
    {
        

        Instantiate(laser, new Vector3(UnityEngine.Random.Range(furthestLeft, furthestRight), transform.position.y, 0), Quaternion.identity);
    }
}
